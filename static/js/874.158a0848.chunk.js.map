{"version":3,"file":"static/js/874.158a0848.chunk.js","mappings":"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","sources":["components/Editor.js","pages/GoodManage/EditGood/index.jsx","../node_modules/@ant-design/icons-svg/es/asn/PlusOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusOutlined.js","../node_modules/react-fast-marquee/src/components/Marquee.tsx"],"sourcesContent":["// 引入富文本编辑器库react-quill\r\nimport ReactQuill from \"react-quill\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class Editor extends Component {\r\n  render() {\r\n    return (\r\n      <ReactQuill\r\n        {...this.props}\r\n        modules={Editor.modules}\r\n        formats={Editor.formats}\r\n      />\r\n    );\r\n  }\r\n}\r\n/*\r\n * 允许在编辑器中使用的格式的白名单\r\n * Quill editor formats\r\n * See https://quilljs.com/docs/formats/\r\n */\r\nEditor.formats = [\r\n  \"header\",\r\n  \"font\",\r\n  \"size\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n  \"video\",\r\n];\r\n\r\n/*\r\n * 控制富文本编辑器的工具栏选项\r\n * Quill modules to attach to editor\r\n * See https://quilljs.com/docs/modules/ for complete options\r\n */\r\nEditor.modules = {\r\n  toolbar: [\r\n    [{ font: [] }],\r\n    [{ size: [] }],\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    [\"link\", \"image\", \"video\"],\r\n    [\"clean\"],\r\n  ],\r\n  clipboard: {\r\n    // toggle to add extra line breaks when pasting HTML:\r\n    matchVisual: false,\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Space,\r\n  Button,\r\n  Alert,\r\n  message,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Checkbox,\r\n  Input,\r\n  InputNumber,\r\n  Steps,\r\n  Tabs,\r\n  Form,\r\n  Cascader,\r\n  Upload,\r\n  Empty,\r\n} from \"antd\";\r\nimport { UploadOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport Editor from \"../../../components/Editor\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Marquee from \"react-fast-marquee\";\r\n\r\nconst { Step } = Steps;\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class EditGood extends Component {\r\n  editGoodFormRef = React.createRef();\r\n  // 编辑商品的表单数据限制规则\r\n  editGoodFormRules = {\r\n    goods_name: [{ required: true, message: \"请输入商品名称\" }],\r\n    goods_price: [{ required: true, message: \"请输入一组数字\" }],\r\n    goods_weight: [{ required: true, message: \"请输一组数字\" }],\r\n    goods_number: [{ required: true, message: \"请输入一组数字\" }],\r\n    goods_cat: [{ required: true, message: \"请选择商品分类，目前仅只支持三级分类\" }],\r\n  };\r\n  state = {\r\n    // 当前步骤条和标签页所处位置\r\n    currentStepAndTab: 0,\r\n    // 上传图片的URL地址\r\n    uploadURL: \"http://127.0.0.1:8888/api/private/v1/upload\",\r\n    // 图片上传组件的headers请求头对象\r\n    headerObj: {\r\n      Authorization: window.sessionStorage.getItem(\"token\"),\r\n    },\r\n    // 商品id\r\n    goods_id: \"\",\r\n    // 编辑商品的表单数据对象\r\n    editGoodForm: {\r\n      goods_name: \"\",\r\n      goods_price: 1,\r\n      goods_weight: 1,\r\n      goods_number: 1,\r\n      // 商品所属的分类数组,包括一级分类，二级分类，三级分类\r\n      goods_cat: [],\r\n      // 商品图片的数组\r\n      pics: [],\r\n      // 商品的详情描述\r\n      goods_introduce: \"\",\r\n      // 商品的参数（数组），包含 `动态参数` 和 `静态属性`\r\n      attrs: [],\r\n    },\r\n\r\n    // 单一类别下的商品默认的所有动态参数列表数据\r\n    defaultDynamicParams: [],\r\n    // 单一类别下的商品默认的所有静态属性列表数据\r\n    defaultStaticAttributes: [],\r\n    // 复选框选中的动态参数对象数组\r\n    checkedDynamicParams: [],\r\n    // 商品已有的动态参数，为字符串数组\r\n    ownDynamicParams: [],\r\n    // 商品已有的静态属性，为以attr_id值作为键名，attr_value为键值的对象\r\n    onwStaticAttributes: {},\r\n    // 输入框中的静态属性对象数组\r\n    inputStaticAttributes: [],\r\n    // 商品分类列表\r\n    cateList: [],\r\n    // 预览图片的窗口\r\n    imgPreviewModalVisible: false,\r\n    imgPreviewModalTitle: \"图片预览\",\r\n    imgPreviewUrl: \"\",\r\n    // 商品所属分类的三级ID\r\n    goods_cat_threeId: \"\",\r\n    // 已上传的商品图片列表\r\n    uploadedPics: [],\r\n  };\r\n\r\n  // tab被点击时的回调\r\n  onTabClick = (activeKey) => {\r\n    // 跳转至其他标签页时必须通过商品基本信息表单的验证通过\r\n    this.editGoodFormRef.current\r\n      .validateFields()\r\n      .then(() => {\r\n        // 如果激活的tab标签页为基本参数，则请求获得参数的函数\r\n        if (+activeKey === 1) {\r\n          this.getDefaultDynamicParams();\r\n        } else if (+activeKey === 2) {\r\n          this.getDefaultStaticAttributes();\r\n        }\r\n        this.setState({ currentStepAndTab: +activeKey });\r\n      })\r\n      .catch(() => {\r\n        return message.error(\"请先完成基本信息的填写\");\r\n      });\r\n  };\r\n  // 图片上传时的状态改变回调,上传中、完成、失败都会调用这个函数。\r\n  handleChange = (changer) => {\r\n    const { file } = changer;\r\n    if (file.status === \"done\") {\r\n      this.handleSuccess(file.response);\r\n      return message.success(\"图片上传成功\");\r\n    }\r\n  };\r\n  // 监听图片上传成功的事件;\r\n  handleSuccess = (response) => {\r\n    // 1. 拼接得到一个图片信息对象\r\n    const picInfo = { pic: response.data.tmp_path };\r\n    // 2. 将图片信息对象，push 到pics数组中\r\n    this.state.editGoodForm.pics.push(picInfo);\r\n  };\r\n  handleRemove = async (file) => {\r\n    try {\r\n      // 1. 获取将要删除的图片的ID\r\n      const { pics_id } = file;\r\n      this.state.editGoodForm.pics = this.state.editGoodForm.pics.filter((pic) => {\r\n        return pic.pics_id !== pics_id;\r\n      });\r\n      const { data: res } = await axios.put(\r\n        `goods/${this.state.goods_id}/pics`,\r\n        this.state.editGoodForm.pics\r\n      );\r\n\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"删除失败\");\r\n      }\r\n    } catch (error) {\r\n      message.error(error.message);\r\n    }\r\n  };\r\n  handlePreview = (file) => {\r\n    // 对新上传的临时图片及已上传的图片，其接受的的file对象不同\r\n    const imgPreviewUrl = file.response ? file.response.data.url : file.url;\r\n    this.setState({\r\n      imgPreviewModalVisible: true,\r\n      imgPreviewModalTitle: \"图片预览\",\r\n      imgPreviewUrl,\r\n    });\r\n  };\r\n  // 根据url地址上的商品ID获取商品信息\r\n  getGoodInfo = async () => {\r\n    const { goods_id } = this.props.match.params;\r\n    this.setState({ goods_id });\r\n    try {\r\n      const { data: res } = await axios.get(`goods/${goods_id}`);\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"获取商品信息失败！\");\r\n      }\r\n      this.initEditGoodForm(res.data);\r\n      return message.success(\"获取商品信息成功！\");\r\n    } catch (error) {}\r\n  };\r\n  // 将表单数据处理为editGoodForm的形式\r\n  initEditGoodForm(formData) {\r\n    let {\r\n      goods_cat,\r\n      goods_name,\r\n      goods_number,\r\n      goods_price,\r\n      goods_weight,\r\n      goods_introduce,\r\n      pics,\r\n      attrs,\r\n      cat_three_id,\r\n    } = formData;\r\n    // split 得到的字符数组不能绑定到级联选择器，需要map转数字数组\r\n    goods_cat = goods_cat.split(\",\").map(Number);\r\n    const editGoodForm = {\r\n      goods_cat,\r\n      goods_name,\r\n      goods_number,\r\n      goods_price,\r\n      goods_weight,\r\n      goods_introduce,\r\n    };\r\n    // 处理attrs得到该商品的静态参数列表和动态参数列表\r\n    const inputStaticAttributes = attrs\r\n      .filter((attr) => attr.attr_sel === \"only\")\r\n      .map((attr) => {\r\n        this.state.onwStaticAttributes[attr.attr_id] = attr.attr_value;\r\n        return {\r\n          attr_id: attr.attr_id,\r\n          attr_value: attr.attr_value,\r\n        };\r\n      });\r\n    const checkedDynamicParams = attrs\r\n      .filter((attr) => attr.attr_sel === \"many\")\r\n      .map((param) => ({\r\n        // 商品已选择的动态参数\r\n        attr_value: param.attr_value,\r\n        attr_id: param.attr_id,\r\n      }));\r\n    const ownDynamicParams = attrs\r\n      .filter((attr) => attr.attr_sel === \"many\")\r\n      .map((attr) => attr.attr_value.split(\",\"));\r\n    const uploadedPics = pics.map((pic) => ({\r\n      thumbUrl: pic.pics_sma_url,\r\n      url: pic.pics_big_url,\r\n      uid: pic.pics_id,\r\n      pics_id: pic.pics_id,\r\n      goods_id: pics.goods_id,\r\n      pic_big: pic.pics_big,\r\n      pic_mid: pic.pic_mid,\r\n      pic_sma: pic.pic_sma,\r\n    }));\r\n    this.state.editGoodForm.pics.push(...uploadedPics);\r\n    this.setState({\r\n      goods_cat_threeId: cat_three_id,\r\n      inputStaticAttributes,\r\n      checkedDynamicParams,\r\n      ownDynamicParams,\r\n      uploadedPics,\r\n    });\r\n    this.editGoodFormRef.current.setFieldsValue(editGoodForm);\r\n  }\r\n  getCateList = async () => {\r\n    try {\r\n      const { data: res } = await axios.get(\"categories\");\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"获取商品分类列表失败！\");\r\n      }\r\n      this.setState({ cateList: res.data });\r\n    } catch (error) {\r\n      return message.error(\"网络出错，请稍后重试！\");\r\n    }\r\n  };\r\n  // 获取该商品所属类别下的所有默认的动态参表对象\r\n  getDefaultDynamicParams = async () => {\r\n    try {\r\n      // 只能通过商品所属的第三级分类ID查询\r\n      const { data: res } = await axios.get(\r\n        `categories/${this.state.goods_cat_threeId}/attributes`,\r\n        {\r\n          params: { sel: \"many\" },\r\n        }\r\n      );\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"获取动态参数列表失败！\");\r\n      }\r\n      // 响应数据的动态参数列表为以逗号分隔的字符串\r\n      res.data.forEach((item) => {\r\n        item.attr_vals = item.attr_vals.length === 0 ? [] : item.attr_vals.split(\",\");\r\n      });\r\n      this.setState({ defaultDynamicParams: res.data });\r\n    } catch (error) {\r\n      return message.error(\"网络出错，请稍后重试！\");\r\n    }\r\n  };\r\n  // 当复选框内容发生变化时更新checked状态的动态参数\r\n  updateCheckedDynamicParams = (checkedValues, index, attr_id) => {\r\n    this.state.checkedDynamicParams[index] = {\r\n      attr_id,\r\n      attr_value: checkedValues.join(\",\"),\r\n    };\r\n  };\r\n  // 获取该商品所属类别下的所有默认的静态属性对象\r\n  getDefaultStaticAttributes = async () => {\r\n    try {\r\n      // 只能通过商品所属的第三级分类ID查询\r\n      // 通过 only 或 many 来获取分类静态属性还是动态参数\r\n      const { data: res } = await axios.get(\r\n        `categories/${this.state.goods_cat_threeId}/attributes`,\r\n        {\r\n          params: { sel: \"only\" },\r\n        }\r\n      );\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"获取静态属性列表失败！\");\r\n      }\r\n      this.setState({ defaultStaticAttributes: res.data });\r\n    } catch (error) {\r\n      return message.error(\"网络出错，请稍后重试！\");\r\n    }\r\n  };\r\n\r\n  // 当输入框静态属性内容发生变化时的回调\r\n  updateInputStaticAttributes = (attr_value, attr_id, index) => {\r\n    const { inputStaticAttributes } = this.state;\r\n    // 如果传递的参数包含index，则直接通过index更新attr_value，否则通过遍历更新attr_value\r\n    if (inputStaticAttributes[index].attr_id === attr_id) {\r\n      inputStaticAttributes[index].attr_value = attr_value;\r\n    } else {\r\n      inputStaticAttributes[inputStaticAttributes.length] = {\r\n        attr_id,\r\n        attr_value,\r\n      };\r\n    }\r\n  };\r\n  editGood = async (params) => {\r\n    this.editGoodFormRef.current\r\n      .validateFields()\r\n      .then(async (value) => {\r\n        try {\r\n          // 将cateId数组处理为以逗号为分隔的字符串\r\n          value.goods_cat = value.goods_cat.join(\",\");\r\n          const test = {\r\n            ...value,\r\n            pics: this.state.editGoodForm.pics,\r\n            attrs: [...this.state.inputStaticAttributes, ...this.state.checkedDynamicParams],\r\n          };\r\n          const { data: res } = await axios.put(`goods/${this.state.goods_id}`, {\r\n            ...value,\r\n            pics: this.state.editGoodForm.pics,\r\n            attrs: [...this.state.inputStaticAttributes, ...this.state.checkedDynamicParams],\r\n          });\r\n          if (res.meta.status !== 200) {\r\n            return message.error(\"编辑商品失败！\");\r\n          }\r\n          message.success(\"编辑商品成功！\");\r\n          this.props.history.push(\"/goods\");\r\n        } catch (error) {\r\n          return message.error(error.message);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        return;\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGoodInfo();\r\n    this.getCateList();\r\n  }\r\n  render() {\r\n    const UploadButton = (\r\n      <div>\r\n        <PlusOutlined />\r\n        <div style={{ marginTop: 8 }}>点击上传</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <>\r\n        <Space direction=\"vertical\" size=\"large\">\r\n          <Alert\r\n            banner\r\n            message={\r\n              <Marquee pauseOnHover gradient={false}>\r\n                目前商品图片上传功能已停用，如需体验该功能在本地服务器运行本项目即可。\r\n              </Marquee>\r\n            }\r\n          />\r\n          <Alert type=\"info\" message=\"编辑商品信息\" className=\"tc\" />\r\n          <Steps current={this.state.currentStepAndTab} status=\"process\">\r\n            <Step title=\"基本信息\"></Step>\r\n            <Step title=\"商品参数\"></Step>\r\n            <Step title=\"商品属性\"></Step>\r\n            <Step title=\"商品图片\"></Step>\r\n            <Step title=\"商品内容\"></Step>\r\n            <Step title=\"完成\"></Step>\r\n          </Steps>\r\n          <Form ref={this.editGoodFormRef} initialValues={this.state.editGoodForm}>\r\n            <Tabs\r\n              tabPosition=\"left\"\r\n              onTabClick={this.onTabClick}\r\n              activeKey={this.state.currentStepAndTab + \"\"}\r\n            >\r\n              <TabPane tab=\"基本信息\" key={0}>\r\n                <Form.Item\r\n                  label=\"商品名称\"\r\n                  name=\"goods_name\"\r\n                  rules={this.editGoodFormRules.goods_name}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"商品价格\"\r\n                  name=\"goods_price\"\r\n                  rules={this.editGoodFormRules.goods_price}\r\n                >\r\n                  <InputNumber\r\n                    min=\"1\"\r\n                    keyboard\r\n                    addonBefore=\"￥\"\r\n                    addonAfter=\"RMB\"\r\n                    className=\"w100p\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"商品重量\"\r\n                  name=\"goods_weight\"\r\n                  rules={this.editGoodFormRules.goods_weight}\r\n                >\r\n                  <InputNumber min=\"1\" keyboard addonAfter=\"克\" className=\"w100p\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"商品数量\"\r\n                  name=\"goods_number\"\r\n                  rules={this.editGoodFormRules.goods_number}\r\n                >\r\n                  <InputNumber min=\"1\" keyboard addonAfter=\"个\" className=\"w100p\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"商品分类\"\r\n                  name=\"goods_cat\"\r\n                  rules={this.editGoodFormRules.goods_cat}\r\n                  normalize={(value) => {\r\n                    return value.length === 3 ? value : [];\r\n                  }}\r\n                >\r\n                  <Cascader\r\n                    disabled\r\n                    placeholder=\"请选择\"\r\n                    expandTrigger=\"hover\"\r\n                    fieldNames={{\r\n                      label: \"cat_name\",\r\n                      value: \"cat_id\",\r\n                      children: \"children\",\r\n                    }}\r\n                    options={this.state.cateList}\r\n                  />\r\n                </Form.Item>\r\n              </TabPane>\r\n              <TabPane tab=\"商品参数\" key={1}>\r\n                {this.state.defaultDynamicParams.length === 0 ? (\r\n                  <Empty description=\"该商品目前暂无动态参数，可去分类参数栏目先创建\">\r\n                    <Link to=\"/params\">点我跳转</Link>\r\n                  </Empty>\r\n                ) : (\r\n                  this.state.defaultDynamicParams.map((param, index) => {\r\n                    return (\r\n                      <Form.Item\r\n                        label={param.attr_name}\r\n                        labelCol={{ span: 24 }}\r\n                        key={param.attr_id}\r\n                      >\r\n                        <Checkbox.Group\r\n                          defaultValue={this.state.ownDynamicParams[index]}\r\n                          key={param.attr_id}\r\n                          className=\"w100p\"\r\n                          onChange={(checkedValues) => {\r\n                            this.updateCheckedDynamicParams(checkedValues, index, param.attr_id);\r\n                          }}\r\n                        >\r\n                          <Row key={param.attr_id}>\r\n                            {param.attr_vals.map((attr, index) => {\r\n                              return (\r\n                                <Col span={8} key={index}>\r\n                                  <Checkbox value={attr} key={index} className=\".m10\">\r\n                                    {attr}\r\n                                  </Checkbox>\r\n                                </Col>\r\n                              );\r\n                            })}\r\n                          </Row>\r\n                        </Checkbox.Group>\r\n                      </Form.Item>\r\n                    );\r\n                  })\r\n                )}\r\n              </TabPane>\r\n              <TabPane tab=\"商品属性\" key={2}>\r\n                {this.state.defaultStaticAttributes.length === 0 ? (\r\n                  <Empty description=\"该商品目前暂无静态属性，可去分类参数栏目先创建后再编辑\">\r\n                    <Link to=\"params\">点我跳转</Link>\r\n                  </Empty>\r\n                ) : (\r\n                  this.state.defaultStaticAttributes.map((attribute, index) => {\r\n                    return (\r\n                      <Form.Item\r\n                        labelCol={{ span: 6 }}\r\n                        label={attribute.attr_name}\r\n                        key={attribute.attr_id}\r\n                      >\r\n                        <Input\r\n                          defaultValue={this.state.onwStaticAttributes[attribute.attr_id]}\r\n                          onChange={(e) => {\r\n                            this.updateInputStaticAttributes(\r\n                              e.target.value,\r\n                              attribute.attr_id,\r\n                              index\r\n                            );\r\n                          }}\r\n                        />\r\n                      </Form.Item>\r\n                    );\r\n                  })\r\n                )}\r\n              </TabPane>\r\n              <TabPane tab=\"商品图片\" key={3}>\r\n                <Upload\r\n                  disabled\r\n                  multiple\r\n                  defaultFileList={this.state.uploadedPics}\r\n                  headers={this.state.headerObj}\r\n                  action={this.state.uploadURL}\r\n                  className=\"upload-list-inline\"\r\n                  listType=\"picture-card\"\r\n                  accept=\"image/*\"\r\n                  onPreview={this.handlePreview}\r\n                  onChange={this.handleChange}\r\n                  onRemove={this.handleRemove}\r\n                >\r\n                  {/* <Button icon={<UploadOutlined />} type=\"primary\">\r\n                    上传图片\r\n                  </Button> */}\r\n                  {UploadButton}\r\n                </Upload>\r\n              </TabPane>\r\n              <TabPane tab=\"商品介绍\" key={4}>\r\n                <Form.Item name=\"goods_introduce\">\r\n                  <Editor placeholder=\"写些介绍吧...\" />\r\n                </Form.Item>\r\n                <Button onClick={this.editGood} type=\"primary\" size=\"large\">\r\n                  确认编辑\r\n                </Button>\r\n              </TabPane>\r\n            </Tabs>\r\n          </Form>\r\n        </Space>\r\n        <Modal\r\n          title={this.state.imgPreviewModalTitle}\r\n          visible={this.state.imgPreviewModalVisible}\r\n          footer={null}\r\n          onCancel={() => {\r\n            this.setState({ imgPreviewModalVisible: false });\r\n          }}\r\n        >\r\n          <img src={this.state.imgPreviewUrl} width=\"100%\" />\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// This icon file is generated automatically.\nvar PlusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z\" } }] }, \"name\": \"plus\", \"theme\": \"outlined\" };\nexport default PlusOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusOutlined = function PlusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusOutlinedSvg\n  }));\n};\n\nPlusOutlined.displayName = 'PlusOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusOutlined);","import React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport \"./Marquee.scss\";\n\ninterface MarqueeProps {\n  /**\n   * Inline style for the container div\n   * Type: object\n   * Default: {}\n   */\n  style?: React.CSSProperties;\n  /**\n   * Class name to style the container div\n   * Type: string\n   * Default: \"\"\n   */\n  className?: string;\n  /**\n   * Whether to play or pause the marquee\n   * Type: boolean\n   * Default: true\n   */\n  play?: boolean;\n  /**\n   * Whether to pause the marquee when hovered\n   * Type: boolean\n   * Default: false\n   */\n  pauseOnHover?: boolean;\n  /**\n   * Whether to pause the marquee when clicked\n   * Type: boolean\n   * Default: false\n   */\n  pauseOnClick?: boolean;\n  /**\n   * The direction the marquee is sliding\n   * Type: \"left\" or \"right\"\n   * Default: \"left\"\n   */\n  direction?: \"left\" | \"right\";\n  /**\n   * Speed calculated as pixels/second\n   * Type: number\n   * Default: 20\n   */\n  speed?: number;\n  /**\n   * Duration to delay the animation after render, in seconds\n   * Type: number\n   * Default: 0\n   */\n  delay?: number;\n  /**\n   * The number of times the marquee should loop, 0 is equivalent to infinite\n   * Type: number\n   * Default: 0\n   */\n  loop?: number;\n  /**\n   * Whether to show the gradient or not\n   * Type: boolean\n   * Default: true\n   */\n  gradient?: boolean;\n  /**\n   * The rgb color of the gradient as an array of length 3\n   * Type: Array<number> of length 3\n   * Default: [255, 255, 255]\n   */\n  gradientColor?: [number, number, number];\n  /**\n   * The width of the gradient on either side\n   * Type: string\n   * Default: 200\n   */\n  gradientWidth?: number | string;\n  /**\n   * A callback for when the marquee finishes scrolling and stops. Only calls if loop is non-zero.\n   * Type: Function\n   * Default: null\n   */\n  onFinish?: () => void;\n  /**\n   * A callback for when the marquee finishes a loop. Does not call if maximum loops are reached (use onFinish instead).\n   * Type: Function\n   * Default: null\n   */\n  onCycleComplete?: () => void;\n  /**\n   * The children rendered inside the marquee\n   * Type: ReactNode\n   * Default: null\n   */\n  children?: React.ReactNode;\n}\n\nconst Marquee: React.FC<MarqueeProps> = ({\n  style = {},\n  className = \"\",\n  play = true,\n  pauseOnHover = false,\n  pauseOnClick = false,\n  direction = \"left\",\n  speed = 20,\n  delay = 0,\n  loop = 0,\n  gradient = true,\n  gradientColor = [255, 255, 255],\n  gradientWidth = 200,\n  onFinish,\n  onCycleComplete,\n  children,\n}) => {\n  // React Hooks\n  const [containerWidth, setContainerWidth] = useState(0);\n  const [marqueeWidth, setMarqueeWidth] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [isMounted, setIsMounted] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const marqueeRef = useRef<HTMLDivElement>(null);\n\n  const calculateWidth = () => {\n    // Find width of container and width of marquee\n    if (marqueeRef.current && containerRef.current) {\n      setContainerWidth(containerRef.current.getBoundingClientRect().width);\n      setMarqueeWidth(marqueeRef.current.getBoundingClientRect().width);\n    }\n\n    if (marqueeWidth < containerWidth) {\n      setDuration(containerWidth / speed);\n    } else {\n      setDuration(marqueeWidth / speed);\n    }\n  };\n\n  useEffect(() => {\n    calculateWidth();\n    // Rerender on window resize\n    window.addEventListener(\"resize\", calculateWidth);\n    return () => {\n      window.removeEventListener(\"resize\", calculateWidth);\n    };\n  });\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  // Gradient color in an unfinished rgba format\n  const rgbaGradientColor = `rgba(${gradientColor[0]}, ${gradientColor[1]}, ${gradientColor[2]}`;\n\n  return (\n    <Fragment>\n      {!isMounted ? null : (\n        <div\n          ref={containerRef}\n          style={{\n            ...style,\n            [\"--pause-on-hover\" as string]: pauseOnHover ? \"paused\" : \"running\",\n            [\"--pause-on-click\" as string]: pauseOnClick ? \"paused\" : \"running\",\n          }}\n          className={className + \" marquee-container\"}\n        >\n          {gradient && (\n            <div\n              style={{\n                [\"--gradient-color\" as string]: `${rgbaGradientColor}, 1), ${rgbaGradientColor}, 0)`,\n                [\"--gradient-width\" as string]:\n                  typeof gradientWidth === \"number\"\n                    ? `${gradientWidth}px`\n                    : gradientWidth,\n              }}\n              className=\"overlay\"\n            />\n          )}\n          <div\n            ref={marqueeRef}\n            style={{\n              [\"--play\" as string]: play ? \"running\" : \"paused\",\n              [\"--direction\" as string]:\n                direction === \"left\" ? \"normal\" : \"reverse\",\n              [\"--duration\" as string]: `${duration}s`,\n              [\"--delay\" as string]: `${delay}s`,\n              [\"--iteration-count\" as string]: !!loop ? `${loop}` : \"infinite\",\n            }}\n            className=\"marquee\"\n            onAnimationIteration={onCycleComplete}\n            onAnimationEnd={onFinish}\n          >\n            {children}\n          </div>\n          <div\n            style={{\n              [\"--play\" as string]: play ? \"running\" : \"paused\",\n              [\"--direction\" as string]:\n                direction === \"left\" ? \"normal\" : \"reverse\",\n              [\"--duration\" as string]: `${duration}s`,\n              [\"--delay\" as string]: `${delay}s`,\n              [\"--iteration-count\" as string]: !!loop ? `${loop}` : \"infinite\",\n            }}\n            className=\"marquee\"\n          >\n            {children}\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Marquee;\n"],"names":["Editor","this","props","modules","formats","Component","toolbar","font","size","list","indent","clipboard","matchVisual","Step","Steps","TabPane","Tabs","EditGood","editGoodFormRef","React","editGoodFormRules","goods_name","required","message","goods_price","goods_weight","goods_number","goods_cat","state","currentStepAndTab","uploadURL","headerObj","Authorization","window","sessionStorage","getItem","goods_id","editGoodForm","pics","goods_introduce","attrs","defaultDynamicParams","defaultStaticAttributes","checkedDynamicParams","ownDynamicParams","onwStaticAttributes","inputStaticAttributes","cateList","imgPreviewModalVisible","imgPreviewModalTitle","imgPreviewUrl","goods_cat_threeId","uploadedPics","onTabClick","activeKey","current","validateFields","then","getDefaultDynamicParams","getDefaultStaticAttributes","setState","catch","handleChange","changer","file","status","handleSuccess","response","picInfo","pic","data","tmp_path","push","handleRemove","pics_id","filter","axios","meta","handlePreview","url","getGoodInfo","match","params","res","initEditGoodForm","getCateList","sel","forEach","item","attr_vals","length","split","updateCheckedDynamicParams","checkedValues","index","attr_id","attr_value","join","updateInputStaticAttributes","editGood","value","history","formData","cat_three_id","map","Number","attr","attr_sel","param","thumbUrl","pics_sma_url","pics_big_url","uid","pic_big","pics_big","pic_mid","pic_sma","setFieldsValue","UploadButton","style","marginTop","Space","direction","Alert","banner","pauseOnHover","gradient","type","className","title","Form","ref","initialValues","tabPosition","tab","label","name","rules","Input","InputNumber","min","keyboard","addonBefore","addonAfter","normalize","Cascader","disabled","placeholder","expandTrigger","fieldNames","children","options","Empty","description","Link","to","attr_name","labelCol","span","Checkbox","defaultValue","onChange","Row","Col","attribute","e","target","Upload","multiple","defaultFileList","headers","action","listType","accept","onPreview","onRemove","Button","onClick","Modal","visible","footer","onCancel","src","width","PlusOutlined","AntdIcon","_objectSpread","icon","PlusOutlinedSvg","displayName","_a","_f","_g","_h","play","_j","_k","pauseOnClick","_l","_m","speed","_o","delay","_p","loop","_q","_r","gradientColor","_s","gradientWidth","onFinish","onCycleComplete","useState","containerWidth","setContainerWidth","marqueeWidth","setMarqueeWidth","duration","setDuration","isMounted","setIsMounted","containerRef","useRef","marqueeRef","calculateWidth","getBoundingClientRect","useEffect","addEventListener","removeEventListener","rgbaGradientColor","Fragment","_b","_c","_d","onAnimationIteration","onAnimationEnd","_e"],"sourceRoot":""}