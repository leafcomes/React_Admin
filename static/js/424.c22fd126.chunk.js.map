{"version":3,"file":"static/js/424.c22fd126.chunk.js","mappings":"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","sources":["pages/GoodManage/Params/index.jsx","../node_modules/@ant-design/icons-svg/es/asn/ExclamationCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/ExclamationCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/PlusOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusOutlined.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Alert,\r\n  Space,\r\n  Form,\r\n  Button,\r\n  Tabs,\r\n  Table,\r\n  message,\r\n  Modal,\r\n  Input,\r\n  Cascader,\r\n  Tag,\r\n} from \"antd\";\r\nimport { PlusOutlined, ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nconst { TabPane } = Tabs;\r\nconst { confirm } = Modal;\r\nexport default class Params extends Component {\r\n  tagInputRef = React.createRef();\r\n  addFormRef = React.createRef();\r\n  editFormRef = React.createRef();\r\n  columns = [\r\n    {\r\n      title: \"#\",\r\n      key: \"index\",\r\n      render: (text, record, index) => index + 1,\r\n    },\r\n    {\r\n      width: \"50%\",\r\n      title: \"名称\",\r\n      dataIndex: \"attr_name\",\r\n      key: \"goods_name\",\r\n    },\r\n    {\r\n      width: \"30%\",\r\n      title: \"操作\",\r\n      key: \"operation\",\r\n      render: (text, record) => (\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              this.showEditModal(record);\r\n            }}\r\n          >\r\n            编辑\r\n          </Button>\r\n          <Button\r\n            danger\r\n            className=\"dangerStyle\"\r\n            onClick={() => {\r\n              this.showRemoveConfirm(record.attr_id);\r\n            }}\r\n          >\r\n            删除\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  state = {\r\n    cateList: [],\r\n    // 商品所属分类的三级ID\r\n    goods_cat_threeId: \"\",\r\n    // 单一类别下的商品默认的所有动态参数列表数据\r\n    defaultDynamicParams: [],\r\n    // 单一类别下的商品默认的所有静态属性列表数据\r\n    defaultStaticAttributes: [],\r\n    addForm: {\r\n      attr_name: \"\",\r\n    },\r\n    editForm: {\r\n      attr_id: \"\",\r\n      attr_name: \"\",\r\n    },\r\n    // 添加动态参数与静态属性的对话框\r\n    addModalVisible: false,\r\n    // 编辑动态参数与静态属性的对话框\r\n    editModalVisible: false,\r\n    // 被激活的tab标签名称,默认为动态参数所在标签栏\r\n    activeTabName: \"many\",\r\n    // 级联选择器已选择的商品分类列表\r\n    checkedCateList: [],\r\n    loading: false,\r\n  };\r\n  showAddModal = () => {\r\n    this.setState({ addModalVisible: true });\r\n  };\r\n  showEditModal = (record) => {\r\n    const editForm = { attr_id: record.attr_id, attr_name: record.attr_name };\r\n\r\n    this.setState({ editModalVisible: true, editForm });\r\n  };\r\n  // 删除动态参数和静态属性的对话框\r\n  showRemoveConfirm = (attr_id) => {\r\n    confirm({\r\n      title: \"提示\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content:\r\n        this.state.activeTabName === \"many\"\r\n          ? \"该操作会删除参数及其参数值，是否继续?\"\r\n          : \"该操作会删除属性及其属性值，是否继续?\",\r\n      onOk: () => {\r\n        this.removeParamAndAttribute(attr_id);\r\n      },\r\n      onCancel: () => {\r\n        message.info(\"已取消删除！\");\r\n      },\r\n    });\r\n  };\r\n\r\n  // 更新级联选择器选择的商品分类三级ID\r\n  updateCheckedCateId = (checkedValue) => {\r\n    if (checkedValue.length !== 3) {\r\n      this.setState({ checkedCateList: [] });\r\n      return;\r\n    }\r\n    this.state.checkedCateList = checkedValue;\r\n    this.state.goods_cat_threeId = checkedValue[2];\r\n    this.getDefaultDynamicParams();\r\n    this.getDefaultStaticAttributes();\r\n    //\r\n  };\r\n  getCateList = async () => {\r\n    try {\r\n      const { data: res } = await axios.get(\"categories\");\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"获取商品分类列表失败！\");\r\n      }\r\n      this.setState({ cateList: res.data });\r\n    } catch (error) {\r\n      return message.error(\"网络出错，请稍后重试！\");\r\n    }\r\n  };\r\n  // listType用来标记获取的是动态参数列表还是静态属性列表\r\n  getParamsAndAttributes = async (listType) => {\r\n    this.setState({ loading: true });\r\n    try {\r\n      // 只能通过商品所属的第三级分类ID查询\r\n      const { data: res } = await axios.get(\r\n        `categories/${this.state.goods_cat_threeId}/attributes`,\r\n        {\r\n          params: { sel: listType },\r\n        }\r\n      );\r\n\r\n      if (res.meta.status !== 200) {\r\n        return listType === \"many\"\r\n          ? message.error(\"获取动态参数列表失败！\")\r\n          : message.error(\"获取静态属性列表失败！\");\r\n      }\r\n      // 响应数据列表的attr_vals值为以逗号分隔的字符串\r\n      res.data.forEach((item) => {\r\n        item.attr_vals = item.attr_vals.length === 0 ? [] : item.attr_vals.split(\",\");\r\n        // 控制标签输入框的显示,false时显示添加标签\r\n        item.tagInputVisible = false;\r\n        item.tagInputValue = \"\";\r\n      });\r\n      this.setState({ loading: false });\r\n      return res.data;\r\n    } catch (error) {\r\n      return message.error(\"网络出错，请稍后重试！\");\r\n    }\r\n  };\r\n  // 获取该商品所属类别下的所有默认的动态参表对象\r\n  getDefaultDynamicParams = async () => {\r\n    const defaultDynamicParams = await this.getParamsAndAttributes(\"many\");\r\n    this.setState({ defaultDynamicParams });\r\n  };\r\n  // 获取该商品所属类别下的所有默认的静态属性对象\r\n  getDefaultStaticAttributes = async () => {\r\n    const defaultStaticAttributes = await this.getParamsAndAttributes(\"only\");\r\n    this.setState({ defaultStaticAttributes });\r\n  };\r\n  updateParamAndAttribute = async (attr) => {\r\n    try {\r\n      const { data: res } = await axios.put(\r\n        `categories/${this.state.goods_cat_threeId}/attributes/${attr.attr_id}`,\r\n        {\r\n          attr_name: attr.attr_name,\r\n          attr_sel: attr.attr_sel,\r\n          attr_vals: attr.attr_vals.join(\",\"),\r\n        }\r\n      );\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"添加失败！\");\r\n      }\r\n      if (this.state.activeTabName === \"many\") {\r\n        this.getDefaultDynamicParams();\r\n      } else {\r\n        this.getDefaultStaticAttributes();\r\n      }\r\n    } catch (error) {\r\n      return message.error(error.message);\r\n    }\r\n  };\r\n  addParamAndAttribute = async () => {\r\n    this.addFormRef.current.validateFields().then(async (form) => {\r\n      const { data: res } = await axios.post(\r\n        `categories/${this.state.goods_cat_threeId}/attributes`,\r\n        {\r\n          attr_name: form.attr_name,\r\n          attr_sel: this.state.activeTabName,\r\n        }\r\n      );\r\n      if (res.meta.status !== 201) {\r\n        return message.error(\"添加失败！\");\r\n      }\r\n      this.setState({ addModalVisible: false }, () => {\r\n        message.success(\"添加成功！\");\r\n        this.getDefaultDynamicParams();\r\n        this.getDefaultStaticAttributes();\r\n      });\r\n    });\r\n  };\r\n  editParamAndAttribute = async () => {\r\n    this.editFormRef.current.validateFields().then(async (form) => {\r\n      const { data: res } = await axios.put(\r\n        `categories/${this.state.goods_cat_threeId}/attributes/${this.state.editForm.attr_id}`,\r\n        {\r\n          attr_name: form.attr_name,\r\n          attr_sel: this.state.activeTabName,\r\n        }\r\n      );\r\n\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"编辑失败！\");\r\n      }\r\n      this.setState({ editModalVisible: false }, () => {\r\n        message.success(\"编辑成功！\");\r\n        this.getDefaultDynamicParams();\r\n        this.getDefaultStaticAttributes();\r\n      });\r\n    });\r\n  };\r\n  removeParamAndAttribute = async (attr_id) => {\r\n    try {\r\n      const { data: res } = await axios.delete(\r\n        `categories/${this.state.goods_cat_threeId}/attributes/${attr_id}`\r\n      );\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"删除失败！\");\r\n      }\r\n      if (this.state.activeTabName === \"many\") {\r\n        this.getDefaultDynamicParams();\r\n      } else {\r\n        this.getDefaultStaticAttributes();\r\n      }\r\n      message.success(\"删除成功！\");\r\n    } catch (error) {}\r\n  };\r\n  handleTagInputChange = (event, attr) => {\r\n    attr.tagInputValue = event.target.value.trim();\r\n  };\r\n  handleTagInputBlur = (attr) => {\r\n    if (attr.tagInputValue === \"\") {\r\n      attr.tagInputVisible = false;\r\n      this.forceUpdate();\r\n      return;\r\n    }\r\n    attr.attr_vals.push(attr.tagInputValue);\r\n    this.updateParamAndAttribute(attr);\r\n  };\r\n  handleTagInputEnter = (attr) => {\r\n    if (attr.tagInputValue === \"\") {\r\n      attr.tagInputVisible = false;\r\n      this.forceUpdate();\r\n      return;\r\n    }\r\n    attr.attr_vals.push(attr.tagInputValue);\r\n    this.updateParamAndAttribute(attr);\r\n  };\r\n  // 当标签关闭时的回调\r\n  handleTagClose = (attr, index) => {\r\n    attr.attr_vals.splice(index, 1);\r\n    this.updateParamAndAttribute(attr);\r\n  };\r\n  componentDidMount() {\r\n    this.getCateList();\r\n  }\r\n  componentDidCatch(error) {}\r\n  render() {\r\n    return (\r\n      <>\r\n        <Space direction=\"vertical\" size=\"middle\">\r\n          <Alert message=\"注意：只允许为第三级分类设置相关参数！\" />\r\n          <Form>\r\n            <Form.Item\r\n              label=\"选择商品分类\"\r\n              normalize={(value) => {\r\n                return value.length === 3 ? value : [];\r\n              }}\r\n            >\r\n              <Cascader\r\n                value={this.state.checkedCateList}\r\n                placeholder=\"请选择\"\r\n                expandTrigger=\"hover\"\r\n                fieldNames={{\r\n                  label: \"cat_name\",\r\n                  value: \"cat_id\",\r\n                  children: \"children\",\r\n                }}\r\n                options={this.state.cateList}\r\n                onChange={this.updateCheckedCateId}\r\n              />\r\n            </Form.Item>\r\n          </Form>\r\n        </Space>\r\n        <Tabs\r\n          activeKey={this.state.activeTabName}\r\n          onChange={(activeKey) => {\r\n            this.setState({ activeTabName: activeKey });\r\n          }}\r\n        >\r\n          <TabPane key=\"many\" tab=\"动态参数\">\r\n            <Space direction=\"vertical\" style={{ width: \"100%\" }}>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={this.showAddModal}\r\n                disabled={!this.state.goods_cat_threeId}\r\n              >\r\n                添加参数\r\n              </Button>\r\n              <Table\r\n                loading={this.state.loading}\r\n                bordered\r\n                columns={this.columns}\r\n                dataSource={this.state.defaultDynamicParams}\r\n                rowKey={(record) => record.attr_id}\r\n                expandable={{\r\n                  defaultExpandAllRows: true,\r\n                  expandedRowRender: (record) => (\r\n                    <>\r\n                      {record.attr_vals.map((value, index) => {\r\n                        return (\r\n                          <Tag\r\n                            key={index}\r\n                            color=\"blue\"\r\n                            visible={true}\r\n                            closable\r\n                            onClose={() => {\r\n                              this.handleTagClose(record, index);\r\n                            }}\r\n                          >\r\n                            {value}\r\n                          </Tag>\r\n                        );\r\n                      })}\r\n                      {record.tagInputVisible ? (\r\n                        <Input\r\n                          ref={this.tagInputRef}\r\n                          className=\"tag-input\"\r\n                          onChange={(event) => {\r\n                            this.handleTagInputChange(event, record);\r\n                          }}\r\n                          onBlur={this.handleTagInputBlur.bind(this, record)}\r\n                          onPressEnter={this.handleTagInputEnter.bind(this, record)}\r\n                        />\r\n                      ) : (\r\n                        <Tag\r\n                          className=\"site-tag-plus\"\r\n                          onClick={(event) => {\r\n                            record.tagInputVisible = true;\r\n                            this.forceUpdate(() => {\r\n                              this.tagInputRef.current.focus();\r\n                            });\r\n                          }}\r\n                        >\r\n                          <PlusOutlined /> newTag\r\n                        </Tag>\r\n                      )}\r\n                    </>\r\n                  ),\r\n                }}\r\n              />\r\n            </Space>\r\n          </TabPane>\r\n          <TabPane key=\"only\" tab=\"静态属性\">\r\n            <Space direction=\"vertical\" style={{ width: \"100%\" }}>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={this.showAddModal}\r\n                disabled={!this.state.goods_cat_threeId}\r\n              >\r\n                添加属性\r\n              </Button>\r\n              <Table\r\n                loading={this.state.loading}\r\n                bordered\r\n                columns={this.columns}\r\n                dataSource={this.state.defaultStaticAttributes}\r\n                rowKey={(record) => record.attr_id}\r\n                expandable={{\r\n                  defaultExpandAllRows: true,\r\n                  expandedRowRender: (record) => (\r\n                    <>\r\n                      {record.attr_vals.map((value, index) => {\r\n                        return (\r\n                          <Tag\r\n                            key={index}\r\n                            color=\"blue\"\r\n                            visible={true}\r\n                            closable\r\n                            onClose={() => {\r\n                              this.handleTagClose(record, index);\r\n                            }}\r\n                          >\r\n                            {value}\r\n                          </Tag>\r\n                        );\r\n                      })}\r\n                      {record.tagInputVisible ? (\r\n                        <Input\r\n                          ref={this.tagInputRef}\r\n                          className=\"tag-input\"\r\n                          onChange={(event) => {\r\n                            this.handleTagInputChange(event, record);\r\n                          }}\r\n                          onBlur={this.handleTagInputBlur.bind(this, record)}\r\n                          onPressEnter={this.handleTagInputEnter.bind(this, record)}\r\n                        />\r\n                      ) : (\r\n                        <Tag\r\n                          className=\"site-tag-plus\"\r\n                          onClick={(event) => {\r\n                            record.tagInputVisible = true;\r\n                            this.forceUpdate(() => {\r\n                              this.tagInputRef.current.focus();\r\n                            });\r\n                          }}\r\n                        >\r\n                          <PlusOutlined /> newTag\r\n                        </Tag>\r\n                      )}\r\n                    </>\r\n                  ),\r\n                }}\r\n              />\r\n            </Space>\r\n          </TabPane>\r\n        </Tabs>\r\n        <Modal\r\n          destroyOnClose\r\n          title={this.state.activeTabName === \"many\" ? \"添加动态参数\" : \"添加静态属性\"}\r\n          visible={this.state.addModalVisible}\r\n          onOk={this.addParamAndAttribute}\r\n          onCancel={() => {\r\n            this.setState({ addModalVisible: false });\r\n          }}\r\n        >\r\n          <Form ref={this.addFormRef}>\r\n            <Form.Item\r\n              name=\"attr_name\"\r\n              label={this.state.activeTabName === \"many\" ? \"参数名称\" : \"属性名称\"}\r\n              rules={[{ required: true, message: \"请输入参数名称\" }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n        <Modal\r\n          title={this.state.activeTabName === \"many\" ? \"编辑动态参数\" : \"编辑静态属性\"}\r\n          visible={this.state.editModalVisible}\r\n          destroyOnClose\r\n          onOk={this.editParamAndAttribute}\r\n          onCancel={() => {\r\n            this.setState({ editModalVisible: false });\r\n          }}\r\n        >\r\n          <Form ref={this.editFormRef} initialValues={this.state.editForm}>\r\n            <Form.Item\r\n              name=\"attr_name\"\r\n              label={this.state.activeTabName === \"many\" ? \"参数名称\" : \"属性名称\"}\r\n              rules={[{ required: true, message: \"请输入参数名称\" }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// This icon file is generated automatically.\nvar ExclamationCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M464 688a48 48 0 1096 0 48 48 0 10-96 0zm24-112h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8z\" } }] }, \"name\": \"exclamation-circle\", \"theme\": \"outlined\" };\nexport default ExclamationCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExclamationCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/ExclamationCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ExclamationCircleOutlined = function ExclamationCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ExclamationCircleOutlinedSvg\n  }));\n};\n\nExclamationCircleOutlined.displayName = 'ExclamationCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(ExclamationCircleOutlined);","// This icon file is generated automatically.\nvar PlusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z\" } }] }, \"name\": \"plus\", \"theme\": \"outlined\" };\nexport default PlusOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusOutlined = function PlusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusOutlinedSvg\n  }));\n};\n\nPlusOutlined.displayName = 'PlusOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusOutlined);"],"names":["TabPane","Tabs","confirm","Modal","Params","tagInputRef","React","addFormRef","editFormRef","columns","title","key","render","text","record","index","width","dataIndex","Space","Button","type","onClick","showEditModal","danger","className","showRemoveConfirm","attr_id","state","cateList","goods_cat_threeId","defaultDynamicParams","defaultStaticAttributes","addForm","attr_name","editForm","addModalVisible","editModalVisible","activeTabName","checkedCateList","loading","showAddModal","setState","icon","content","onOk","removeParamAndAttribute","onCancel","message","updateCheckedCateId","checkedValue","length","getDefaultDynamicParams","getDefaultStaticAttributes","getCateList","axios","res","data","meta","status","getParamsAndAttributes","listType","params","sel","forEach","item","attr_vals","split","tagInputVisible","tagInputValue","updateParamAndAttribute","attr","attr_sel","join","addParamAndAttribute","current","validateFields","then","form","this","editParamAndAttribute","handleTagInputChange","event","target","value","trim","handleTagInputBlur","forceUpdate","push","handleTagInputEnter","handleTagClose","splice","error","direction","size","Alert","Form","label","normalize","Cascader","placeholder","expandTrigger","fieldNames","children","options","onChange","activeKey","tab","style","disabled","Table","bordered","dataSource","rowKey","expandable","defaultExpandAllRows","expandedRowRender","map","Tag","color","visible","closable","onClose","Input","ref","onBlur","bind","onPressEnter","focus","destroyOnClose","name","rules","required","initialValues","Component","ExclamationCircleOutlined","props","AntdIcon","_objectSpread","ExclamationCircleOutlinedSvg","displayName","PlusOutlined","PlusOutlinedSvg"],"sourceRoot":""}