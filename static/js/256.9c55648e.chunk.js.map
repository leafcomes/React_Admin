{"version":3,"file":"static/js/256.9c55648e.chunk.js","mappings":"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","sources":["components/Editor.js","../node_modules/@ant-design/icons-svg/es/asn/UploadOutlined.js","../node_modules/@ant-design/icons/es/icons/UploadOutlined.js","pages/GoodManage/AddGood/index.jsx","../node_modules/react-fast-marquee/src/components/Marquee.tsx"],"sourcesContent":["// 引入富文本编辑器库react-quill\r\nimport ReactQuill from \"react-quill\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class Editor extends Component {\r\n  render() {\r\n    return (\r\n      <ReactQuill\r\n        {...this.props}\r\n        modules={Editor.modules}\r\n        formats={Editor.formats}\r\n      />\r\n    );\r\n  }\r\n}\r\n/*\r\n * 允许在编辑器中使用的格式的白名单\r\n * Quill editor formats\r\n * See https://quilljs.com/docs/formats/\r\n */\r\nEditor.formats = [\r\n  \"header\",\r\n  \"font\",\r\n  \"size\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n  \"video\",\r\n];\r\n\r\n/*\r\n * 控制富文本编辑器的工具栏选项\r\n * Quill modules to attach to editor\r\n * See https://quilljs.com/docs/modules/ for complete options\r\n */\r\nEditor.modules = {\r\n  toolbar: [\r\n    [{ font: [] }],\r\n    [{ size: [] }],\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    [\"link\", \"image\", \"video\"],\r\n    [\"clean\"],\r\n  ],\r\n  clipboard: {\r\n    // toggle to add extra line breaks when pasting HTML:\r\n    matchVisual: false,\r\n  },\r\n};\r\n","// This icon file is generated automatically.\nvar UploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M400 317.7h73.9V656c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V317.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 163a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"upload\", \"theme\": \"outlined\" };\nexport default UploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/UploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UploadOutlined = function UploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UploadOutlinedSvg\n  }));\n};\n\nUploadOutlined.displayName = 'UploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(UploadOutlined);","import React, { Component } from \"react\";\r\nimport {\r\n  Space,\r\n  Button,\r\n  Alert,\r\n  message,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Checkbox,\r\n  Input,\r\n  InputNumber,\r\n  Steps,\r\n  Tabs,\r\n  Form,\r\n  Cascader,\r\n  Upload,\r\n  Empty,\r\n} from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport Editor from \"../../../components/Editor\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Marquee from \"react-fast-marquee\";\r\n\r\nconst { Step } = Steps;\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class AddGood extends Component {\r\n  addGoodFormRef = React.createRef();\r\n  // 添加商品的表单数据限制规则\r\n  addGoodFormRules = {\r\n    goods_name: [{ required: true, message: \"请输入商品名称\" }],\r\n    goods_price: [{ required: true, message: \"请输入一组数字\" }],\r\n    goods_weight: [{ required: true, message: \"请输一组数字\" }],\r\n    goods_number: [{ required: true, message: \"请输入一组数字\" }],\r\n    goods_cat: [{ required: true, message: \"请选择商品分类，目前仅只支持三级分类\" }],\r\n  };\r\n  state = {\r\n    // 当前步骤条和标签页所处位置\r\n    currentStepAndTab: 0,\r\n    // 上传图片的URL地址\r\n    uploadURL: \"http://127.0.0.1:8888/api/private/v1/upload\",\r\n    // 图片上传组件的headers请求头对象\r\n    headerObj: {\r\n      Authorization: window.sessionStorage.getItem(\"token\"),\r\n    },\r\n    // 添加商品的初始化表单数据对象\r\n    addGoodForm: {\r\n      goods_name: \"\",\r\n      goods_price: 1,\r\n      goods_weight: 1,\r\n      goods_number: 1,\r\n      // 商品所属的分类数组,包括一级分类，二级分类，三级分类\r\n      goods_cat: [],\r\n      // 商品图片的数组\r\n      pics: [],\r\n      // 商品的详情描述\r\n      goods_introduce: \"\",\r\n      // 商品的参数（数组），包含 `动态参数` 和 `静态属性`\r\n      attrs: [],\r\n    },\r\n    // 单一类别下商品的所有默认动态参数列表数据\r\n    defaultDynamicParams: [],\r\n    // 单一类别下商品的所有默认静态属性列表数据\r\n    defaultStaticAttributes: [],\r\n    // 复选框选中的动态参数\r\n    checkedDynamicParams: [],\r\n    // 输入框中的静态属性\r\n    inputStaticAttributes: [],\r\n    // 商品分类列表\r\n    cateList: [],\r\n    imgPreviewModalVisible: false,\r\n    imgPreviewModalTitle: \"图片预览\",\r\n    imgPreviewUrl: \"\",\r\n  };\r\n  // tab被点击时的回调\r\n  onTabClick = (activeKey) => {\r\n    // 跳转至其他标签页时必须通过商品基本信息表单的验证通过\r\n    this.addGoodFormRef.current\r\n      .validateFields()\r\n      .then(() => {\r\n        // 如果激活的tab标签页为基本参数，则请求获得参数的函数\r\n        if (+activeKey === 1) {\r\n          this.getDefaultDynamicParams();\r\n        } else if (+activeKey === 2) {\r\n          this.getDefaultStaticAttributes();\r\n        }\r\n        this.setState({ currentStepAndTab: +activeKey });\r\n      })\r\n      .catch(() => {\r\n        return message.error(\"请先完成基本信息的填写\");\r\n      });\r\n  };\r\n  // 图片上传时的状态改变回调,上传中、完成、失败都会调用这个函数。\r\n  handleChange = (changer) => {\r\n    const { file } = changer;\r\n    if (file.status === \"done\") {\r\n      this.handleSuccess(file.response);\r\n      return message.success(\"图片上传成功\");\r\n    }\r\n  };\r\n  // 监听图片上传成功的事件;\r\n  handleSuccess = (response) => {\r\n    // 1. 拼接得到一个图片信息对象\r\n    const picInfo = { pic: response.data.tmp_path };\r\n    // 2. 将图片信息对象，push 到pics数组中\r\n    this.state.addGoodForm.pics.push(picInfo);\r\n  };\r\n  handleRemove = (file) => {\r\n    // 1. 获取将要删除的图片的临时路径\r\n    const filePath = file.response.data.tmp_path;\r\n    // 2. 从 pics 数组中，找到这个图片对应的索引值\r\n    const i = this.state.addGoodForm.pics.findIndex((x) => x.pic === filePath);\r\n    // 3. 调用数组的 splice 方法，把图片信息对象，从 pics 数组中移除\r\n    const result = this.state.addGoodForm.pics.splice(i, 1);\r\n    return result.length === 0 ? message.error(\"删除失败！\") : true;\r\n    // 亦可采用以下方法\r\n    // this.state.addGoodForm.pics = this.state.addGoodForm.pics.filter((picObj) => {\r\n    //  return  picObj.pic !== filePath;\r\n    // })\r\n  };\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      imgPreviewModalVisible: true,\r\n      imgPreviewModalTitle: file.name,\r\n      imgPreviewUrl: file.response.data.url,\r\n    });\r\n  };\r\n  getCateList = async () => {\r\n    try {\r\n      const { data: res } = await axios.get(\"categories\");\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"获取商品分类列表失败！\");\r\n      }\r\n      this.setState({ cateList: res.data });\r\n    } catch (error) {\r\n      return message.error(\"网络出错，请稍后重试！\");\r\n    }\r\n  };\r\n  // 获取单一类别下的商品默认所有动态参数数据\r\n  getDefaultDynamicParams = async () => {\r\n    try {\r\n      // 只能通过商品所属的第三级分类ID查询\r\n      const goods_cat = this.addGoodFormRef.current.getFieldValue(\"goods_cat\");\r\n      const cateId = goods_cat.length === 3 ? goods_cat[2] + 0 : null;\r\n      // 通过 only 或 many 来获取分类静态属性还是动态参数\r\n      const { data: res } = await axios.get(`categories/${cateId}/attributes`, {\r\n        params: { sel: \"many\" },\r\n      });\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"获取动态参数列表失败！\");\r\n      }\r\n      // 响应数据的动态参数列表为以逗号分隔的字符串\r\n      res.data.forEach((item) => {\r\n        item.attr_vals = item.attr_vals.length === 0 ? [] : item.attr_vals.split(\",\");\r\n      });\r\n      this.setState({ defaultDynamicParams: res.data });\r\n    } catch (error) {\r\n      return message.error(\"网络出错，请稍后重试！\");\r\n    }\r\n  };\r\n  // 当复选框内容发生变化时更新checked状态的动态参数,由于attr_vals字段名的值是默认值，在这使用attr_value字段名代表以后更新的值\r\n  updateCheckedDynamicParams = (checkedValues, index, attr_id) => {\r\n    this.state.checkedDynamicParams[index] = {\r\n      attr_id,\r\n      attr_value: checkedValues.join(\",\"),\r\n    };\r\n  };\r\n  // 获取单一类别下的商品默认所有静态属性数据\r\n  getDefaultStaticAttributes = async () => {\r\n    try {\r\n      // 只能通过商品所属的第三级分类ID查询\r\n      const goods_cat = this.addGoodFormRef.current.getFieldValue(\"goods_cat\");\r\n      const cateId = goods_cat.length === 3 ? goods_cat[2] + 0 : null;\r\n      // 通过 only 或 many 来获取分类静态属性还是动态参数\r\n      const { data: res } = await axios.get(`categories/${cateId}/attributes`, {\r\n        params: { sel: \"only\" },\r\n      });\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"获取静态属性列表失败！\");\r\n      }\r\n      // 初始化输入框内的静态属性值,由于attr_vals字段名的值是默认值，在这使用attr_value字段名代表以后更新的值\r\n      res.data.forEach((item, index) => {\r\n        this.state.inputStaticAttributes[index] = {\r\n          attr_id: item.attr_id,\r\n          attr_value: item.attr_vals,\r\n        };\r\n      });\r\n      this.setState({ defaultStaticAttributes: res.data });\r\n    } catch (error) {\r\n      return message.error(\"网络出错，请稍后重试！\");\r\n    }\r\n  };\r\n  // 当输入框静态属性内容发生变化时的回调,由于attr_vals字段名的值是默认值，在这使用attr_value字段名代表以后更新的值\r\n  updateInputStaticAttributes = (attr_value, attr_id, index) => {\r\n    this.state.inputStaticAttributes[index] = {\r\n      attr_id,\r\n      attr_value,\r\n    };\r\n  };\r\n  addGood = async (params) => {\r\n    this.addGoodFormRef.current\r\n      .validateFields()\r\n      .then(async (value) => {\r\n        try {\r\n          // 将cateId数组处理为以逗号为分隔的字符串\r\n          value.goods_cat = value.goods_cat.join(\",\");\r\n          const { data: res } = await axios.post(\"goods\", {\r\n            ...value,\r\n            pics: this.state.addGoodForm.pics,\r\n            attrs: [...this.state.inputStaticAttributes, ...this.state.checkedDynamicParams],\r\n          });\r\n          if (res.meta.status !== 201) {\r\n            return message.error(\"添加商品失败！\");\r\n          }\r\n          message.success(\"添加商品成功！\");\r\n          this.props.history.push(\"/goods\");\r\n        } catch (error) {\r\n          return message.error(error.message);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        return;\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCateList();\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Space direction=\"vertical\" size=\"large\">\r\n          <Alert\r\n            banner\r\n            message={\r\n              <Marquee pauseOnHover gradient={false}>\r\n                目前商品图片上传功能已停用，如需体验该功能在本地服务器运行本项目即可。\r\n              </Marquee>\r\n            }\r\n          />\r\n          <Alert type=\"info\" message=\"添加商品信息\" className=\"tc\" />\r\n          <Steps current={this.state.currentStepAndTab} status=\"process\">\r\n            <Step title=\"基本信息\"></Step>\r\n            <Step title=\"商品参数\"></Step>\r\n            <Step title=\"商品属性\"></Step>\r\n            <Step title=\"商品图片\"></Step>\r\n            <Step title=\"商品内容\"></Step>\r\n            <Step title=\"完成\"></Step>\r\n          </Steps>\r\n          <Form ref={this.addGoodFormRef} initialValues={this.state.addGoodForm}>\r\n            <Tabs\r\n              tabPosition=\"left\"\r\n              onTabClick={this.onTabClick}\r\n              activeKey={this.state.currentStepAndTab + \"\"}\r\n            >\r\n              <TabPane tab=\"基本信息\" key={0}>\r\n                <Form.Item\r\n                  label=\"商品名称\"\r\n                  name=\"goods_name\"\r\n                  rules={this.addGoodFormRules.goods_name}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"商品价格\"\r\n                  name=\"goods_price\"\r\n                  rules={this.addGoodFormRules.goods_price}\r\n                >\r\n                  <InputNumber\r\n                    min=\"1\"\r\n                    keyboard\r\n                    addonBefore=\"￥\"\r\n                    addonAfter=\"RMB\"\r\n                    className=\"w100p\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"商品重量\"\r\n                  name=\"goods_weight\"\r\n                  rules={this.addGoodFormRules.goods_weight}\r\n                >\r\n                  <InputNumber min=\"1\" keyboard addonAfter=\"克\" className=\"w100p\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"商品数量\"\r\n                  name=\"goods_number\"\r\n                  rules={this.addGoodFormRules.goods_number}\r\n                >\r\n                  <InputNumber min=\"1\" keyboard addonAfter=\"个\" className=\"w100p\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"商品分类\"\r\n                  name=\"goods_cat\"\r\n                  rules={this.addGoodFormRules.goods_cat}\r\n                  normalize={(value) => {\r\n                    return value.length === 3 ? value : [];\r\n                  }}\r\n                >\r\n                  <Cascader\r\n                    placeholder=\"请选择\"\r\n                    expandTrigger=\"hover\"\r\n                    fieldNames={{\r\n                      label: \"cat_name\",\r\n                      value: \"cat_id\",\r\n                      children: \"children\",\r\n                    }}\r\n                    options={this.state.cateList}\r\n                  />\r\n                </Form.Item>\r\n              </TabPane>\r\n              <TabPane tab=\"商品参数\" key={1}>\r\n                {this.state.defaultDynamicParams.length === 0 ? (\r\n                  <Empty description=\"该商品类别目前暂无动态参数，可去分类参数栏目先创建\">\r\n                    <Link to=\"/params\">点我跳转</Link>\r\n                  </Empty>\r\n                ) : (\r\n                  this.state.defaultDynamicParams.map((param, index) => {\r\n                    return (\r\n                      <Form.Item\r\n                        label={param.attr_name}\r\n                        labelCol={{ span: 24 }}\r\n                        key={param.attr_id}\r\n                      >\r\n                        <Checkbox.Group\r\n                          key={param.attr_id}\r\n                          className=\"w100p\"\r\n                          onChange={(checkedValues) => {\r\n                            this.updateCheckedDynamicParams(checkedValues, index, param.attr_id);\r\n                          }}\r\n                        >\r\n                          <Row key={param.attr_id}>\r\n                            {param.attr_vals.map((attr, index) => {\r\n                              return (\r\n                                <Col span={8} key={index}>\r\n                                  <Checkbox value={attr} key={index} className=\".m10\">\r\n                                    {attr}\r\n                                  </Checkbox>\r\n                                </Col>\r\n                              );\r\n                            })}\r\n                          </Row>\r\n                        </Checkbox.Group>\r\n                      </Form.Item>\r\n                    );\r\n                  })\r\n                )}\r\n              </TabPane>\r\n              <TabPane tab=\"商品属性\" key={2}>\r\n                {this.state.defaultStaticAttributes.length === 0 ? (\r\n                  <Empty description=\"该商品类别目前暂无静态属性，可去分类参数栏目先创建\">\r\n                    <Link to=\"/params\">点我跳转</Link>\r\n                  </Empty>\r\n                ) : (\r\n                  this.state.defaultStaticAttributes.map((attribute, index) => {\r\n                    return (\r\n                      <Form.Item\r\n                        labelCol={{ span: 6 }}\r\n                        label={attribute.attr_name}\r\n                        key={attribute.attr_id}\r\n                      >\r\n                        <Input\r\n                          defaultValue={attribute.attr_vals}\r\n                          onChange={(e) => {\r\n                            this.updateInputStaticAttributes(\r\n                              e.target.value,\r\n                              attribute.attr_id,\r\n                              index\r\n                            );\r\n                          }}\r\n                        />\r\n                      </Form.Item>\r\n                    );\r\n                  })\r\n                )}\r\n              </TabPane>\r\n              <TabPane tab=\"商品图片\" key={3}>\r\n                <Upload\r\n                  disabled\r\n                  multiple\r\n                  headers={this.state.headerObj}\r\n                  action={this.state.uploadURL}\r\n                  className=\"upload-list-inline\"\r\n                  listType=\"picture\"\r\n                  onPreview={this.handlePreview}\r\n                  onChange={this.handleChange}\r\n                  onRemove={this.handleRemove}\r\n                >\r\n                  <Button icon={<UploadOutlined />} type=\"primary\" disabled>\r\n                    上传图片\r\n                  </Button>\r\n                </Upload>\r\n              </TabPane>\r\n              <TabPane tab=\"商品介绍\" key={4}>\r\n                <Form.Item name=\"goods_introduce\">\r\n                  <Editor placeholder=\"写些介绍吧...\" />\r\n                </Form.Item>\r\n                <Button onClick={this.addGood} type=\"primary\" size=\"large\">\r\n                  确认添加\r\n                </Button>\r\n              </TabPane>\r\n            </Tabs>\r\n          </Form>\r\n        </Space>\r\n        <Modal\r\n          title={this.state.imgPreviewModalTitle}\r\n          visible={this.state.imgPreviewModalVisible}\r\n          footer={null}\r\n          onCancel={() => {\r\n            this.setState({ imgPreviewModalVisible: false });\r\n          }}\r\n        >\r\n          <img src={this.state.imgPreviewUrl} width=\"100%\" />\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport \"./Marquee.scss\";\n\ninterface MarqueeProps {\n  /**\n   * Inline style for the container div\n   * Type: object\n   * Default: {}\n   */\n  style?: React.CSSProperties;\n  /**\n   * Class name to style the container div\n   * Type: string\n   * Default: \"\"\n   */\n  className?: string;\n  /**\n   * Whether to play or pause the marquee\n   * Type: boolean\n   * Default: true\n   */\n  play?: boolean;\n  /**\n   * Whether to pause the marquee when hovered\n   * Type: boolean\n   * Default: false\n   */\n  pauseOnHover?: boolean;\n  /**\n   * Whether to pause the marquee when clicked\n   * Type: boolean\n   * Default: false\n   */\n  pauseOnClick?: boolean;\n  /**\n   * The direction the marquee is sliding\n   * Type: \"left\" or \"right\"\n   * Default: \"left\"\n   */\n  direction?: \"left\" | \"right\";\n  /**\n   * Speed calculated as pixels/second\n   * Type: number\n   * Default: 20\n   */\n  speed?: number;\n  /**\n   * Duration to delay the animation after render, in seconds\n   * Type: number\n   * Default: 0\n   */\n  delay?: number;\n  /**\n   * The number of times the marquee should loop, 0 is equivalent to infinite\n   * Type: number\n   * Default: 0\n   */\n  loop?: number;\n  /**\n   * Whether to show the gradient or not\n   * Type: boolean\n   * Default: true\n   */\n  gradient?: boolean;\n  /**\n   * The rgb color of the gradient as an array of length 3\n   * Type: Array<number> of length 3\n   * Default: [255, 255, 255]\n   */\n  gradientColor?: [number, number, number];\n  /**\n   * The width of the gradient on either side\n   * Type: string\n   * Default: 200\n   */\n  gradientWidth?: number | string;\n  /**\n   * A callback for when the marquee finishes scrolling and stops. Only calls if loop is non-zero.\n   * Type: Function\n   * Default: null\n   */\n  onFinish?: () => void;\n  /**\n   * A callback for when the marquee finishes a loop. Does not call if maximum loops are reached (use onFinish instead).\n   * Type: Function\n   * Default: null\n   */\n  onCycleComplete?: () => void;\n  /**\n   * The children rendered inside the marquee\n   * Type: ReactNode\n   * Default: null\n   */\n  children?: React.ReactNode;\n}\n\nconst Marquee: React.FC<MarqueeProps> = ({\n  style = {},\n  className = \"\",\n  play = true,\n  pauseOnHover = false,\n  pauseOnClick = false,\n  direction = \"left\",\n  speed = 20,\n  delay = 0,\n  loop = 0,\n  gradient = true,\n  gradientColor = [255, 255, 255],\n  gradientWidth = 200,\n  onFinish,\n  onCycleComplete,\n  children,\n}) => {\n  // React Hooks\n  const [containerWidth, setContainerWidth] = useState(0);\n  const [marqueeWidth, setMarqueeWidth] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [isMounted, setIsMounted] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const marqueeRef = useRef<HTMLDivElement>(null);\n\n  const calculateWidth = () => {\n    // Find width of container and width of marquee\n    if (marqueeRef.current && containerRef.current) {\n      setContainerWidth(containerRef.current.getBoundingClientRect().width);\n      setMarqueeWidth(marqueeRef.current.getBoundingClientRect().width);\n    }\n\n    if (marqueeWidth < containerWidth) {\n      setDuration(containerWidth / speed);\n    } else {\n      setDuration(marqueeWidth / speed);\n    }\n  };\n\n  useEffect(() => {\n    calculateWidth();\n    // Rerender on window resize\n    window.addEventListener(\"resize\", calculateWidth);\n    return () => {\n      window.removeEventListener(\"resize\", calculateWidth);\n    };\n  });\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  // Gradient color in an unfinished rgba format\n  const rgbaGradientColor = `rgba(${gradientColor[0]}, ${gradientColor[1]}, ${gradientColor[2]}`;\n\n  return (\n    <Fragment>\n      {!isMounted ? null : (\n        <div\n          ref={containerRef}\n          style={{\n            ...style,\n            [\"--pause-on-hover\" as string]: pauseOnHover ? \"paused\" : \"running\",\n            [\"--pause-on-click\" as string]: pauseOnClick ? \"paused\" : \"running\",\n          }}\n          className={className + \" marquee-container\"}\n        >\n          {gradient && (\n            <div\n              style={{\n                [\"--gradient-color\" as string]: `${rgbaGradientColor}, 1), ${rgbaGradientColor}, 0)`,\n                [\"--gradient-width\" as string]:\n                  typeof gradientWidth === \"number\"\n                    ? `${gradientWidth}px`\n                    : gradientWidth,\n              }}\n              className=\"overlay\"\n            />\n          )}\n          <div\n            ref={marqueeRef}\n            style={{\n              [\"--play\" as string]: play ? \"running\" : \"paused\",\n              [\"--direction\" as string]:\n                direction === \"left\" ? \"normal\" : \"reverse\",\n              [\"--duration\" as string]: `${duration}s`,\n              [\"--delay\" as string]: `${delay}s`,\n              [\"--iteration-count\" as string]: !!loop ? `${loop}` : \"infinite\",\n            }}\n            className=\"marquee\"\n            onAnimationIteration={onCycleComplete}\n            onAnimationEnd={onFinish}\n          >\n            {children}\n          </div>\n          <div\n            style={{\n              [\"--play\" as string]: play ? \"running\" : \"paused\",\n              [\"--direction\" as string]:\n                direction === \"left\" ? \"normal\" : \"reverse\",\n              [\"--duration\" as string]: `${duration}s`,\n              [\"--delay\" as string]: `${delay}s`,\n              [\"--iteration-count\" as string]: !!loop ? `${loop}` : \"infinite\",\n            }}\n            className=\"marquee\"\n          >\n            {children}\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Marquee;\n"],"names":["Editor","this","props","modules","formats","Component","toolbar","font","size","list","indent","clipboard","matchVisual","UploadOutlined","ref","React","AntdIcon","_objectSpread","icon","UploadOutlinedSvg","displayName","Step","Steps","TabPane","Tabs","AddGood","addGoodFormRef","addGoodFormRules","goods_name","required","message","goods_price","goods_weight","goods_number","goods_cat","state","currentStepAndTab","uploadURL","headerObj","Authorization","window","sessionStorage","getItem","addGoodForm","pics","goods_introduce","attrs","defaultDynamicParams","defaultStaticAttributes","checkedDynamicParams","inputStaticAttributes","cateList","imgPreviewModalVisible","imgPreviewModalTitle","imgPreviewUrl","onTabClick","activeKey","current","validateFields","then","getDefaultDynamicParams","getDefaultStaticAttributes","setState","catch","handleChange","changer","file","status","handleSuccess","response","picInfo","pic","data","tmp_path","push","handleRemove","filePath","i","findIndex","x","splice","length","handlePreview","name","url","getCateList","axios","res","meta","getFieldValue","cateId","params","sel","forEach","item","attr_vals","split","updateCheckedDynamicParams","checkedValues","index","attr_id","attr_value","join","updateInputStaticAttributes","addGood","value","history","Space","direction","Alert","banner","pauseOnHover","gradient","type","className","title","Form","initialValues","tabPosition","tab","label","rules","Input","InputNumber","min","keyboard","addonBefore","addonAfter","normalize","Cascader","placeholder","expandTrigger","fieldNames","children","options","Empty","description","Link","to","map","param","attr_name","labelCol","span","Checkbox","onChange","Row","attr","Col","attribute","defaultValue","e","target","Upload","disabled","multiple","headers","action","listType","onPreview","onRemove","Button","onClick","Modal","visible","footer","onCancel","src","width","_a","_f","style","_g","_h","play","_j","_k","pauseOnClick","_l","_m","speed","_o","delay","_p","loop","_q","_r","gradientColor","_s","gradientWidth","onFinish","onCycleComplete","useState","containerWidth","setContainerWidth","marqueeWidth","setMarqueeWidth","duration","setDuration","isMounted","setIsMounted","containerRef","useRef","marqueeRef","calculateWidth","getBoundingClientRect","useEffect","addEventListener","removeEventListener","rgbaGradientColor","Fragment","_b","_c","_d","onAnimationIteration","onAnimationEnd","_e"],"sourceRoot":""}