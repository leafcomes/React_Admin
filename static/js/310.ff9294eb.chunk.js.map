{"version":3,"file":"static/js/310.ff9294eb.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/CaretRightOutlined.js","../node_modules/@ant-design/icons/es/icons/CaretRightOutlined.js","pages/RightManage/Roles/index.jsx","../node_modules/@ant-design/icons-svg/es/asn/ExclamationCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/ExclamationCircleOutlined.js"],"sourcesContent":["// This icon file is generated automatically.\nvar CaretRightOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M715.8 493.5L335 165.1c-14.2-12.2-35-1.2-35 18.5v656.8c0 19.7 20.8 30.7 35 18.5l380.8-328.4c10.9-9.4 10.9-27.6 0-37z\" } }] }, \"name\": \"caret-right\", \"theme\": \"outlined\" };\nexport default CaretRightOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CaretRightOutlinedSvg from \"@ant-design/icons-svg/es/asn/CaretRightOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CaretRightOutlined = function CaretRightOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CaretRightOutlinedSvg\n  }));\n};\n\nCaretRightOutlined.displayName = 'CaretRightOutlined';\nexport default /*#__PURE__*/React.forwardRef(CaretRightOutlined);","import React, { Component } from \"react\";\r\nimport { Space, Button, Table, message, Tag, Row, Col, Modal, Input, Form, Tree } from \"antd\";\r\nimport { CaretRightOutlined, ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nconst { confirm } = Modal;\r\nexport default class Roles extends Component {\r\n  addRoleFormRef = React.createRef();\r\n  editRoleFormRef = React.createRef();\r\n  // 用于添加角色时的限制规则\r\n  roleRules = {\r\n    roleName: [{ required: true, message: \"请输入角色名称\" }],\r\n    roleDesc: [{ required: true, message: \"请输入角色描述\" }],\r\n  };\r\n  columns = [\r\n    {\r\n      title: \"#\",\r\n      key: \"index\",\r\n      render: (text, record, index) => index + 1,\r\n    },\r\n    {\r\n      title: \"角色名称\",\r\n      width: \"20%\",\r\n      key: \"roleName\",\r\n      dataIndex: \"roleName\",\r\n    },\r\n    {\r\n      title: \"角色描述\",\r\n      width: \"40%\",\r\n      key: \"roleDesc\",\r\n      dataIndex: \"roleDesc\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      width: \"30%\",\r\n      key: \"operation\",\r\n      render: (text, record) => {\r\n        return (\r\n          <Space>\r\n            <Button\r\n              className=\"primaryStyle\"\r\n              onClick={() => {\r\n                this.showEditRoleModal(record.id);\r\n              }}\r\n            >\r\n              编辑\r\n            </Button>\r\n            <Button\r\n              className=\"warningStyle\"\r\n              onClick={() => {\r\n                this.showAllotRightModal(record);\r\n              }}\r\n            >\r\n              分配权限\r\n            </Button>\r\n            <Button\r\n              className=\"dangerStyle\"\r\n              onClick={() => {\r\n                this.showRemoveRoleConfirm(record.id);\r\n              }}\r\n            >\r\n              删除\r\n            </Button>\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  state = {\r\n    // 控制tag标签的显示与隐藏\r\n    tagVisible: true,\r\n    // 控制删除权限的对话框的显示与隐藏\r\n    removeRightConfirmVisible: false,\r\n    removeRoleConfirmVisible: false,\r\n    addRoleModalVisible: false,\r\n    editRoleModalVisible: false,\r\n    allotRightModalVisible: false,\r\n    // 所有被选中、叶子节点的key和半选中节点的key\r\n    allCheckedKeys: [],\r\n    // 所有角色列表数据\r\n    roleList: [],\r\n    // 所有权限列表数据\r\n    rightList: [],\r\n    // 修改角色的表单数据\r\n    editRoleForm: {\r\n      roleName: \"\",\r\n      roleDesc: \"\",\r\n    },\r\n    // 角色的已分配三级（叶子）权限\r\n    roleLeafRightIds: [],\r\n    // 需要被分配权限的角色Id\r\n    RoleIdOfAllotRight: \"\",\r\n    loading: false,\r\n  };\r\n  getRoleList = async (params) => {\r\n    this.setState({ loading: true });\r\n    try {\r\n      const { data: res } = await axios.get(\"roles\");\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"获取角色列表失败！\");\r\n      }\r\n      this.setState({ roleList: res.data, loading: false });\r\n    } catch (error) {\r\n      return message.error(\"网络出错，请稍后重试！\");\r\n    }\r\n  };\r\n  getRightList = async (params) => {\r\n    try {\r\n      const { data: res } = await axios.get(\"rights/tree\");\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"获取权限列表失败！\");\r\n      }\r\n      this.setState({ roleList: res.data });\r\n    } catch (error) {\r\n      return message.error(\"网络出错，请稍后重试！\");\r\n    }\r\n  };\r\n  getRoleLeafRightIds = (role, rightIdList = []) => {\r\n    role.children.forEach((right) => {\r\n      if (right.children === undefined) {\r\n        return rightIdList.push(right.id);\r\n      }\r\n      this.getRoleLeafRightIds(right, rightIdList);\r\n    });\r\n    return rightIdList;\r\n  };\r\n  showRemoveRightConfirm = (role, rightId) => {\r\n    confirm({\r\n      title: \"提示\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"该操作会删除该角色下的当前权限及其子级权限，是否继续?\",\r\n      onOk: () => {\r\n        this.removeRightById(role, rightId);\r\n      },\r\n      onCancel: () => {\r\n        message.info(\"已取消删除！\");\r\n      },\r\n    });\r\n  };\r\n  showRemoveRoleConfirm = (roleId) => {\r\n    confirm({\r\n      title: \"提示\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"该操作会删除该角色，是否继续?\",\r\n      onOk: () => {\r\n        this.removeRoleById(roleId);\r\n      },\r\n      onCancel: () => {\r\n        message.info(\"已取消删除！\");\r\n      },\r\n    });\r\n  };\r\n  showEditRoleModal = async (roleId) => {\r\n    try {\r\n      const { data: res } = await axios.get(`roles/${roleId}`);\r\n\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"获取角色信息失败\");\r\n      }\r\n\r\n      this.setState({ editRoleModalVisible: true, editRoleForm: res.data });\r\n    } catch (error) {\r\n      message.error(\"网络出错，请稍后重试！\");\r\n    }\r\n  };\r\n  showAllotRightModal = async (role) => {\r\n    try {\r\n      const { data: res } = await axios.get(\"rights/tree\");\r\n\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"获取权限列表失败\");\r\n      }\r\n      const roleLeafRightIds = this.getRoleLeafRightIds(role);\r\n\r\n      this.setState({\r\n        allotRightModalVisible: true,\r\n        rightList: res.data,\r\n        roleLeafRightIds,\r\n        RoleIdOfAllotRight: role.id,\r\n      });\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      // message.error(\"网络出错，请稍后重试！\");\r\n    }\r\n  };\r\n  removeRightById = async (role, rightId) => {\r\n    // 根据Id删除对应的权限\r\n    try {\r\n      const { data: res } = await axios.delete(`roles/${role.id}/rights/${rightId}`);\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"删除权限失败！\");\r\n      }\r\n      this.getRoleList();\r\n      return message.success(\"删除权限成功！\");\r\n    } catch (error) {\r\n      return message.error(\"网络出错，请稍后重试！\");\r\n    }\r\n  };\r\n  removeRoleById = async (roleId) => {\r\n    try {\r\n      const { data: res } = await axios.delete(`roles/${roleId}`);\r\n\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"删除角色失败!\");\r\n      }\r\n      this.getRoleList();\r\n      return message.success(\"删除角色成功！\");\r\n    } catch (error) {\r\n      return message.error(\"网络出错，请稍后重试！\");\r\n    }\r\n  };\r\n  addRole = async () => {\r\n    this.addRoleFormRef.current\r\n      .validateFields()\r\n      .then(async (value) => {\r\n        try {\r\n          // 发起添加角色信息的数据请求\r\n          const { data: res } = await axios.post(\"roles\", {\r\n            roleName: value.roleName,\r\n            roleDesc: value.roleDesc,\r\n          });\r\n\r\n          if (res.meta.status !== 201) {\r\n            return message.error(\"添加角色失败！\");\r\n          }\r\n          // 隐藏添加角色的对话框\r\n          this.setState({ addRoleModalVisible: false });\r\n          this.getRoleList();\r\n          message.success(\"添加角色信息成功\");\r\n        } catch (error) {\r\n          return message.error(\"网络出错，请稍后重试！\");\r\n        }\r\n      })\r\n      .catch(() => {\r\n        return;\r\n      });\r\n  };\r\n  editRole = async () => {\r\n    this.editRoleFormRef.current\r\n      .validateFields()\r\n      .then(async (value) => {\r\n        try {\r\n          // 发起修改角色信息的数据请求\r\n          const { data: res } = await axios.put(`roles/${this.state.editRoleForm.roleId}`, {\r\n            roleName: value.roleName,\r\n            roleDesc: value.roleDesc,\r\n          });\r\n          if (res.meta.status !== 200) {\r\n            return message.error(\"更新角色信息失败！\");\r\n          }\r\n          // 隐藏修改角色信息的对话框\r\n          this.setState({ editRoleModalVisible: false });\r\n          this.getRoleList();\r\n          message.success(\"更新角色信息成功\");\r\n        } catch (error) {\r\n          return message.error(\"网络出错，请稍后重试！\");\r\n        }\r\n      })\r\n      .catch(() => {\r\n        return;\r\n      });\r\n  };\r\n\r\n  allotRight = async () => {\r\n    try {\r\n      const idStr = this.state.allCheckedKeys.join(\",\");\r\n      const { data: res } = await axios.post(`roles/${this.state.RoleIdOfAllotRight}/rights`, {\r\n        rids: idStr,\r\n      });\r\n      if (res.meta.status !== 200) {\r\n        return message.error(\"分配权限失败！\");\r\n      }\r\n      this.getRoleList();\r\n      this.setState({ allotRightModalVisible: false });\r\n      message.success(\"分配权限成功\");\r\n    } catch (error) {\r\n      return message.error(\"网络出错，请稍后重试！\");\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getRoleList();\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Space direction=\"vertical\" style={{ width: \"100%\" }}>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              this.setState({ addRoleModalVisible: true });\r\n            }}\r\n          >\r\n            添加角色\r\n          </Button>\r\n          <Table\r\n            loading={this.state.loading}\r\n            columns={this.columns}\r\n            rowKey={(record) => record.id}\r\n            dataSource={this.state.roleList}\r\n            expandable={{\r\n              childrenColumnName: \"authName\",\r\n              expandedRowRender: (record) => {\r\n                return record.children.map((right) => {\r\n                  return (\r\n                    // 渲染一级权限\r\n                    <Row align=\"middle\" key={right.id}>\r\n                      <Col span={6}>\r\n                        <Tag\r\n                          closable\r\n                          visible={this.state.tagVisible}\r\n                          color=\"blue\"\r\n                          onClose={() => {\r\n                            this.showRemoveRightConfirm(record, right.id);\r\n                          }}\r\n                        >\r\n                          {right.authName}\r\n                        </Tag>\r\n                        <CaretRightOutlined />\r\n                      </Col>\r\n                      <Col span={18}>\r\n                        {right.children.map((subItem) => {\r\n                          return (\r\n                            // 渲染二级权限\r\n                            <Row align=\"middle\" key={subItem.id}>\r\n                              <Col span={6}>\r\n                                <Tag\r\n                                  closable\r\n                                  color=\"green\"\r\n                                  visible={this.state.tagVisible}\r\n                                  onClose={() => {\r\n                                    this.showRemoveRightConfirm(record, subItem.id);\r\n                                  }}\r\n                                >\r\n                                  {subItem.authName}\r\n                                </Tag>\r\n                                <CaretRightOutlined />\r\n                              </Col>\r\n                              <Col span={18}>\r\n                                {/* 渲染三级权限 */}\r\n                                <Row>\r\n                                  {subItem.children.map((item) => {\r\n                                    return (\r\n                                      <Col span={6} key={item.id}>\r\n                                        <Tag\r\n                                          closable\r\n                                          color=\"orange\"\r\n                                          visible={this.state.tagVisible}\r\n                                          onClose={() => {\r\n                                            this.showRemoveRightConfirm(record, item.id);\r\n                                          }}\r\n                                        >\r\n                                          {item.authName}\r\n                                        </Tag>\r\n                                      </Col>\r\n                                    );\r\n                                  })}\r\n                                </Row>\r\n                              </Col>\r\n                            </Row>\r\n                          );\r\n                        })}\r\n                      </Col>\r\n                    </Row>\r\n                  );\r\n                });\r\n              },\r\n            }}\r\n            bordered\r\n          ></Table>\r\n        </Space>\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={this.state.addRoleModalVisible}\r\n          destroyOnClose\r\n          onOk={this.addRole}\r\n          onCancel={() => {\r\n            this.setState({ addRoleModalVisible: false });\r\n          }}\r\n        >\r\n          <Form ref={this.addRoleFormRef}>\r\n            <Form.Item name=\"roleName\" label=\"角色名称\" rules={this.roleRules.roleName}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"roleDesc\" label=\"角色描述\" rules={this.roleRules.roleDesc}>\r\n              <Input />\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n        <Modal\r\n          title=\"编辑角色\"\r\n          visible={this.state.editRoleModalVisible}\r\n          destroyOnClose\r\n          onOk={this.editRole}\r\n          onCancel={() => {\r\n            this.setState({ editRoleModalVisible: false });\r\n          }}\r\n        >\r\n          <Form initialValues={this.state.editRoleForm} ref={this.editRoleFormRef}>\r\n            <Form.Item name=\"roleName\" label=\"角色名称\" rules={this.roleRules.roleName}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"roleDesc\" label=\"角色描述\" rules={this.roleRules.roleDesc}>\r\n              <Input />\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n        <Modal\r\n          title=\"分配权限\"\r\n          visible={this.state.allotRightModalVisible}\r\n          onCancel={() => {\r\n            this.setState({ allotRightModalVisible: false });\r\n          }}\r\n          onOk={this.allotRight}\r\n        >\r\n          <Tree\r\n            style={{ width: \"100%\" }}\r\n            defaultExpandAll\r\n            checkedKeys={this.state.roleLeafRightIds}\r\n            checkable\r\n            onCheck={(checkedKeys, event) => {\r\n              const allCheckedKeys = [...checkedKeys, ...event.halfCheckedKeys];\r\n              this.setState({ roleLeafRightIds: checkedKeys, allCheckedKeys });\r\n            }}\r\n            treeData={this.state.rightList}\r\n            fieldNames={{ title: \"authName\", key: \"id\", children: \"children\" }}\r\n          />\r\n          {/* <Tree style={{width: '100%'}} defaultExpandAll checkable>\r\n            {this.state.rightList.map((right) => {\r\n              return (\r\n                <TreeNode title={right.authName} value={right.id}>\r\n                  {right.children.map((subItem) => {\r\n                    return (\r\n                      <TreeNode title={subItem.authName} value={subItem.id}>\r\n                        {subItem.children.map((item) => {\r\n                          return (\r\n                            <TreeNode title={item.authName} value={item.id} />\r\n                          );\r\n                        })}\r\n                      </TreeNode>\r\n                    );\r\n                  })}\r\n                </TreeNode>\r\n              );\r\n            })}\r\n          </Tree > */}\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// This icon file is generated automatically.\nvar ExclamationCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M464 688a48 48 0 1096 0 48 48 0 10-96 0zm24-112h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8z\" } }] }, \"name\": \"exclamation-circle\", \"theme\": \"outlined\" };\nexport default ExclamationCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExclamationCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/ExclamationCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ExclamationCircleOutlined = function ExclamationCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ExclamationCircleOutlinedSvg\n  }));\n};\n\nExclamationCircleOutlined.displayName = 'ExclamationCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(ExclamationCircleOutlined);"],"names":["CaretRightOutlined","props","ref","React","AntdIcon","_objectSpread","icon","CaretRightOutlinedSvg","displayName","confirm","Modal","Roles","addRoleFormRef","editRoleFormRef","roleRules","roleName","required","message","roleDesc","columns","title","key","render","text","record","index","width","dataIndex","Space","Button","className","onClick","showEditRoleModal","id","showAllotRightModal","showRemoveRoleConfirm","state","tagVisible","removeRightConfirmVisible","removeRoleConfirmVisible","addRoleModalVisible","editRoleModalVisible","allotRightModalVisible","allCheckedKeys","roleList","rightList","editRoleForm","roleLeafRightIds","RoleIdOfAllotRight","loading","getRoleList","params","setState","axios","res","data","meta","status","getRightList","getRoleLeafRightIds","role","rightIdList","children","forEach","right","undefined","push","showRemoveRightConfirm","rightId","ExclamationCircleOutlined","content","onOk","removeRightById","onCancel","roleId","removeRoleById","addRole","current","validateFields","then","value","this","catch","editRole","allotRight","idStr","join","rids","direction","style","type","Table","rowKey","dataSource","expandable","childrenColumnName","expandedRowRender","map","Row","align","Col","span","Tag","closable","visible","color","onClose","authName","subItem","item","bordered","destroyOnClose","Form","name","label","rules","Input","initialValues","Tree","defaultExpandAll","checkedKeys","checkable","onCheck","event","halfCheckedKeys","treeData","fieldNames","Component","ExclamationCircleOutlinedSvg"],"sourceRoot":""}